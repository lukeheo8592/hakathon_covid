{"version":3,"sources":["people.js","person.js","main.js","peopleJson.js","App.js","reportWebVitals.js","index.js"],"names":["data","require","People","useState","page","setPage","people","setPeople","useEffect","start","splice","Button","variant","onClick","event","window","location","href","length","Card","Body","Title","Text","Table","hover","map","person","vaccine_no","name","first_name","last_name","address","city","street","gender","vaccine","has_vaccine","test","has_test","colSpan","Pagination","Prev","Item","Next","datas","Person","props","setPerson","loading","setLoading","sorted_data","forEach","id","sin_number","console","log","style","width","Img","src","height","ListGroup","className","ListGroupItem","birthdate","date","frequency","result","Main","history","useHistory","searchString","setSearchString","Form","onSubmit","e","preventDefault","push","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Check","label","required","PeopleJson","JSON","stringify","App","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","Container","Row","Col","exact","path","component","render","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"26oTAEMA,EAAMC,EAAQ,IAgGLC,MA7Ff,WAAkB,IAAD,EAEWC,mBAAS,GAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGeF,mBAAS,MAHxB,mBAGNG,EAHM,KAGEC,EAHF,KA4Bb,OAvBAC,qBAAU,WAEV,IAAIC,EAEAA,EADS,IAATL,EACO,EAEU,GAARA,EAAK,GAElBG,EAAUP,EAAKU,OAAOD,EAAM,MAC5B,CAACL,IAcO,qCACV,cAACO,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAU,SAAAC,GAAK,OAAKC,OAAOC,SAASC,KAAK,WAAnE,2BAAqG,IACrG,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAU,SAAAC,GAAK,OAAKC,OAAOC,SAASC,KAAK,eAArE,uBAAuG,IAGrF,OAAXX,EAAmB,mDAAiD,IAAlBA,EAAOY,OAAgB,0CACtE,gCACI,uBACR,cAACC,EAAA,EAAD,UACA,eAACA,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,KAAN,oJAMJ,uBACE,eAACC,EAAA,EAAD,CAAOC,OAAK,EAAZ,UACgB,gCACI,+BACI,oDACA,sCACA,+DACA,wCACA,mDACA,iDAGR,gCAEKlB,EAASA,EAAOmB,KAAI,SAACC,GAAD,OACjB,qBAA4Bb,QAAS,SAAAC,GAAK,OAAKC,OAAOC,SAASC,KAAhB,kBAAgCS,EAAOC,aAAtF,UACI,6BAAKD,EAAOC,aACZ,+BAAKD,EAAOE,KAAKC,WAAjB,IAA8BH,EAAOE,KAAKE,aAC1C,+BAAKJ,EAAOK,QAAQC,KAApB,OAAkCN,EAAOK,QAAQE,UACjD,6BAAKP,EAAOQ,SACZ,8BAAoC,IAA/BR,EAAOS,QAAQC,YAAwB,kDAA6B,4DACzE,8BAA8B,IAAzBV,EAAOW,KAAKC,SAAqB,kDAA6B,8DAN9DZ,EAAOC,eAQf,6BACD,oBAAIY,QAAQ,IAAZ,2CAMxB,eAACC,EAAA,EAAD,WACP,cAACA,EAAA,EAAWC,KAAZ,CAAiB5B,QA5Dd,WACQT,EAAO,GACPC,EAAQD,EAAO,MA2D1B,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAiB,IAATD,GAA0B,IAATA,EAAJ,EAAqBA,EAAM,IAA/E,SAA8F,IAATA,GAA0B,IAATA,EAAJ,EAAqBA,EAAM,IAC7H,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IAA7E,SAA2F,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IACzH,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,IAAvE,SAAwF,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,IAChH,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IAA7E,SAA2F,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IACzH,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IAA7E,SAA2F,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IACzH,cAACoC,EAAA,EAAWG,KAAZ,CAAiB9B,QA3Dd,WAEQR,EAAQD,EAAO,gB,gBC3BrBwC,EAAQ3C,EAAQ,IA2DP4C,MAzDf,SAAgBC,GAAO,IAAD,EAEU3C,mBAAS,MAFnB,mBAEXuB,EAFW,KAEHqB,EAFG,OAGY5C,oBAAS,GAHrB,mBAGX6C,EAHW,KAGFC,EAHE,KAwBlB,OAnBAzC,qBAAU,WACNyC,GAAW,GAEZ,IAAIC,EAAc,KAClBN,EAAMO,SAAQ,SAACnD,GAEXA,EAAK2B,YAAcmB,EAAMM,KAGpBF,EAAclD,MAKtB+C,EAAUG,GACVD,GAAW,KAEX,CAACH,EAAMM,GAAIN,EAAMO,aAGjB,qCACCC,QAAQC,IAAI7B,IACR,IAAZsB,EAAoB,2DAAiD,OAAXtB,EAAmB,mEAAsCoB,EAAMM,OAA6C,IAAhC1B,EAAOS,QAAQC,YAAwB,cAACjB,EAAA,EAAD,UACtK,eAACA,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKE,MAAN,WAAaK,EAAOE,KAAKC,WAAY,IAAKH,EAAOE,KAAKE,UAAW,8CACjE,cAACX,EAAA,EAAKG,KAAN,UACC,iEAIH,8BACA,eAACH,EAAA,EAAD,CAAMqC,MAAO,CAAEC,MAAO,QAAtB,UACN,cAACtC,EAAA,EAAKuC,IAAN,CAAU9C,QAAQ,MAAM+C,IAAI,4KAA4KH,MAAO,CAAEI,OAAQ,QAASH,MAAO,UACzO,eAACtC,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,wCACA,eAACF,EAAA,EAAKG,KAAN,WACCI,EAAOE,KAAKC,WAAY,IAAKH,EAAOE,KAAKE,UAAW,8CAGvD,eAAC+B,EAAA,EAAD,CAAWC,UAAU,mBAArB,UACE,eAACC,EAAA,EAAD,oBAAsBrC,EAAOE,KAAKC,WAAY,IAAKH,EAAOE,KAAKE,aAC/D,eAACiC,EAAA,EAAD,6BAA+BrC,EAAOsC,aACtC,eAACD,EAAA,EAAD,iCAAmCrC,EAAOS,QAAQ8B,KAAlD,OACA,eAACF,EAAA,EAAD,0CAA4CrC,EAAOW,KAAK6B,UAAxD,QACyB,IAAzBxC,EAAOW,KAAKC,SAAoB,eAACyB,EAAA,EAAD,gCAAkCrC,EAAOW,KAAK8B,OAA9C,OAAuE,e,QCH5FC,MAhCf,WACE,IAAIC,EAAUC,cADA,EAE0BnE,mBAAS,IAFnC,mBAEPoE,EAFO,KAEOC,EAFP,KASZ,OACE,mCACA,eAACC,EAAA,EAAD,CAAMC,SARV,SAAsBC,GAGpBA,EAAEC,iBACFP,EAAQQ,KAAR,kBAAwBN,KAItB,UACA,eAACE,EAAA,EAAKK,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,iCACA,cAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,OAAOC,YAAY,2BAA2BrB,UAAU,UAAUsB,MAAOb,EACjGc,SAAU,SAACV,GAAD,OAAOH,EAAgBG,EAAEW,OAAOF,UACrC,cAACX,EAAA,EAAKnD,KAAN,CAAWwC,UAAU,aAArB,4EAKF,cAACW,EAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,SACE,cAACN,EAAA,EAAKc,MAAN,CAAYL,KAAK,WAAWM,MAAM,eAAeC,UAAQ,MAE3D,cAAC9E,EAAA,EAAD,CAAQC,QAAQ,UAAUsE,KAAK,SAA/B,0BCzCAlF,EAAMC,EAAQ,IAmELyF,MAhEf,WAAsB,IAAD,EAEOvF,mBAAS,GAFhB,mBAEVC,EAFU,KAEJC,EAFI,OAGWF,mBAAS,MAHpB,mBAGVG,EAHU,KAGFC,EAHE,KA8BjB,OAzBAC,qBAAU,WAEV,IAAIC,EAEAA,EADS,IAATL,EACO,EAEU,GAARA,EAAK,GAElBG,EAAUP,EAAKU,OAAOD,EAAM,MAE5B,CAACL,IAeO,qCACJ,cAACO,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAU,SAAAC,GAAK,OAAKC,OAAOC,SAASC,KAAK,WAAnE,2BAAqG,IACrG,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAU,SAAAC,GAAK,OAAKC,OAAOC,SAASC,KAAK,eAArE,uBAAuG,IACvG,qCAAO,0BACP,cAACE,EAAA,EAAD,UACA,eAACA,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKE,MAAN,oCACA,eAACF,EAAA,EAAKG,KAAN,0EAC8D,qBAKlE,qCAAO,0BACZqE,KAAKC,UAAUtF,GAEhB,qCAAO,0BACC,eAACkC,EAAA,EAAD,WACP,cAACA,EAAA,EAAWC,KAAZ,CAAiB5B,QA/Bd,WACQT,EAAO,GACPC,EAAQD,EAAO,MA8B1B,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAiB,IAATD,GAA0B,IAATA,EAAJ,EAAqBA,EAAM,IAA/E,SAA8F,IAATA,GAA0B,IAATA,EAAJ,EAAqBA,EAAM,IAC7H,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IAA7E,SAA2F,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IACzH,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,IAAvE,SAAwF,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,IAChH,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IAA7E,SAA2F,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IACzH,cAACoC,EAAA,EAAWE,KAAZ,CAAiB7B,QAAS,WAAKR,EAAgB,IAARD,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IAA7E,SAA2F,IAARA,GAAyB,IAATA,EAAJ,EAAoBA,EAAM,IACzH,cAACoC,EAAA,EAAWG,KAAZ,CAAiB9B,QA9Bd,WAEQR,EAAQD,EAAO,aC2BZyF,MA9Cf,WACE,OAAS,qCACP,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACA,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACA,cAACH,EAAA,EAAOI,MAAR,CAAcjF,KAAK,QAAnB,uCAGF,cAAC6E,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBjD,GAAG,mBAApB,SACE,eAACkD,EAAA,EAAD,CAAKxC,UAAU,UAAf,UACA,cAAC,gBAAD,CAAemC,GAAG,QAAlB,SACA,cAACK,EAAA,EAAIC,KAAL,qBAEE,cAAC,gBAAD,CAAeN,GAAG,UAAlB,SACF,cAACK,EAAA,EAAIC,KAAL,+CASJ,uBACI,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACG,cAAC,IAAD,CAAUX,GAAG,YAEhB,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,QAAQC,UAAWzC,IACrC,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,UAAUC,UAAW3G,IACvC,cAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,cAAcC,UAAWnB,IAC3C,cAAC,IAAD,CAAOkB,KAAK,cAAcE,OAAQ,SAAChE,GAAD,OAAW,cAAC,EAAD,CAAQM,GAAIN,EAAMiE,MAAMC,OAAO5D,QAC5E,cAAC,IAAD,CAAOyD,UAAWzC,iB,QCnCZ6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCYdQ,IAASZ,OACL,eAAC,gBAAD,eAAgB,cAAC,EAAD,OAElBa,SAASC,eAAe,SAM1BX,M","file":"static/js/main.5ed0366a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Button ,Card, Table, Pagination} from 'react-bootstrap'\r\nconst data =require(\"./vaccine.json\");\r\n\r\n\r\nfunction People(){\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [people, setPeople] = useState(null)\r\n\r\n    useEffect(() => {\r\n    // Update the document title using the browser API\r\n    let start;\r\n    if( page === 1){\r\n        start =0;\r\n    }else{\r\n        start = (page-1)*8;\r\n    }\r\n    setPeople(data.splice(start,8));\r\n  },[page]);\r\n\r\n    function previousPage() {\r\n        if (page > 1) {\r\n            setPage(page - 1)\r\n            \r\n        }\r\n    }\r\n\r\n    function nextPage(){\r\n    \r\n            setPage(page + 1)\r\n        \r\n    }\r\n    return (<>\r\n  <Button variant=\"primary\" onClick={ event =>  window.location.href='/people'}>Arranged data</Button>{' '}\r\n  <Button variant=\"secondary\" onClick={ event =>  window.location.href='/peopleJson'}>JSON data</Button>{' '}\r\n  \r\n  \r\n        {people === null ? (<div> Loading data...</div>) : people.length === 0 ?( <div>No data</div>):(\r\n            <div>\r\n                <br/>\r\n        <Card>\r\n        <Card.Body>\r\n          <Card.Title>People List</Card.Title>\r\n          <Card.Text>\r\n           It will show vaccinated and unvaccinated people on the list, click vaccinated people and you can see the Digital health Passport\r\n          </Card.Text>\r\n        </Card.Body>\r\n       \r\n      </Card>\r\n      <br/>\r\n        <Table hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Vaccination number</th>\r\n                                <th>Name</th>\r\n                                <th>Address city + address street</th>\r\n                                <th>gender</th>\r\n                                <th>vaccinated or not</th>\r\n                                <th>covid test</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              \r\n                            {people ? people.map((person) => (\r\n                                <tr key={person.vaccine_no} onClick={event =>  window.location.href=`/person/${person.vaccine_no}`}>\r\n                                    <td>{person.vaccine_no}</td>\r\n                                    <td>{person.name.first_name} {person.name.last_name}</td>\r\n                                    <td>{person.address.city}{`  , `}{person.address.street}</td>\r\n                                    <td>{person.gender}</td>\r\n                                    <td>{person.vaccine.has_vaccine === true ? (<div>{`     `} Yes</div>) : (<div>  {`     `}     No</div>)}</td>\r\n                                    <td>{person.test.has_test === true ? (<div>{`     `} Yes</div>) : (<div>  {`     `}     No</div>)}</td>\r\n                                </tr> \r\n                            )):  <tr>\r\n                                <td colSpan=\"4\">Loading Restaurants...</td>\r\n                           \r\n                           </tr> } \r\n                        </tbody>\r\n                    </Table>\r\n        \r\n        <Pagination>\r\n <Pagination.Prev onClick={previousPage}/>\r\n <Pagination.Item onClick={()=>{setPage(page === 1 ? 1 : page === 2 ? 1 : page -2)}}>{page === 1 ? 1 : page === 2 ? 1 : page -2 }</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 2 : page === 2 ? 2: page -1)}}>{page ===1 ? 2 : page === 2 ? 2: page -1}</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 3 : page === 2 ? 3: page)}}>{page ===1 ? 3 : page === 2 ? 3: page}</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 4 : page === 2 ? 4: page +1)}}>{page ===1 ? 4 : page === 2 ? 4: page +1}</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 5 : page === 2 ? 5: page +2)}}>{page ===1 ? 5 : page === 2 ? 5: page +2}</Pagination.Item>\r\n <Pagination.Next onClick={nextPage}/>\r\n</Pagination>\r\n      </div>)\r\n        }\r\n        </>\r\n        )}\r\n\r\n\r\n\r\n\r\n\r\nexport default People","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Button ,Card, ListGroup, ListGroupItem} from 'react-bootstrap'\r\nconst datas = require(\"./vaccine.json\");\r\n\r\nfunction Person(props){\r\n\r\n    const [person, setPerson] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        // Update the document title using the browser API\r\n       let sorted_data = null; \r\n       datas.forEach((data) =>{\r\n           \r\n        if(data.vaccine_no == props.id){\r\n         \r\n\r\n                sorted_data = data;\r\n         \r\n           \r\n        }\r\n       })\r\n        setPerson(sorted_data);\r\n        setLoading(false);\r\n      \r\n      },[props.id, props.sin_number]);\r\n     \r\n    return (\r\n        <> \r\n        {console.log(person)}\r\n{loading === true ? (<div>Loading Passport Data...</div>): person === null ? (<div>Unable to find Passport with id:{props.id}</div>) : person.vaccine.has_vaccine ===  false?(<Card>\r\n        <Card.Body>\r\n          <Card.Title>{person.name.first_name}{\" \"}{person.name.last_name}{\" hasn't been vaccinated Covid-19 vaccine\"}</Card.Title>\r\n          <Card.Text>\r\n          {\"No covid-19 passport for somone has not been vaccinated\"}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        </Card>)  : (\r\n        <div>\r\n        <Card style={{ width: '100%' }}>\r\n  <Card.Img variant=\"top\" src=\"https://images.unsplash.com/photo-1605377347958-e8bd4c00ba1d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8OHx8dmFjY2luZXxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\" style={{ height: '15rem', width: '100%' }} />\r\n  <Card.Body>\r\n    <Card.Title>Covid-19 Vaccine Passport</Card.Title>\r\n    <Card.Text>\r\n    {person.name.first_name}{\" \"}{person.name.last_name}{\" has been vaccinated Covid-19 vaccine\"}\r\n    </Card.Text>\r\n  </Card.Body>\r\n  <ListGroup className=\"list-group-flush\">\r\n    <ListGroupItem>Name: {person.name.first_name}{\" \"}{person.name.last_name}</ListGroupItem>\r\n    <ListGroupItem>Birth date:    {person.birthdate}</ListGroupItem>\r\n    <ListGroupItem>Vaccinated date:   {person.vaccine.date} </ListGroupItem>\r\n    <ListGroupItem> Number of Covid-19 test:   {person.test.frequency} </ListGroupItem>\r\n   {person.test.has_test === true ? <ListGroupItem>Result of test:   {person.test.result} </ListGroupItem>:\"\"} \r\n  </ListGroup>\r\n</Card>\r\n        </div>\r\n    )\r\n    \r\n}\r\n</>)}\r\nexport default Person;","/*********************************************************************************\r\n* WEB422 – Assignment 3\r\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy.\r\n* No part of this assignment has been copied manually or electronically from any other source\r\n* (including web sites) or distributed to other students.\r\n*\r\n* Name: __Geunhyeok Heo________ Student ID: ___136873197_____ Date: ____2021-02-24__\r\n*\r\n*\r\n********************************************************************************/\r\nimport React from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport './App.css'\r\n\r\nimport {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Main() {\r\n  let history = useHistory();\r\n  const [searchString, setSearchString] = useState(\"\")\r\n  function handleSubmit(e){\r\n\r\n   \r\n    e.preventDefault();\r\n    history.push(`/person/${searchString}`);\r\n  }\r\n    return (\r\n      <>\r\n      <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Vaccination Number</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter Vaccination number\" className=\"mr-sm-2\" value={searchString}\r\n   onChange={(e) => setSearchString(e.target.value)} />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll never share your Vaccination number with anyone else.\r\n        </Form.Text>\r\n      </Form.Group>\r\n    \r\n      <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Check type=\"checkbox\" label=\"Check me out\" required />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { useState, useEffect } from 'react'\r\nimport { Card,Button , Pagination} from 'react-bootstrap'\r\nconst data =require(\"./vaccine.json\");\r\n\r\n\r\nfunction PeopleJson(){\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [people, setPeople] = useState(null)\r\n\r\n    useEffect(() => {\r\n    // Update the document title using the browser API\r\n    let start;\r\n    if( page === 1){\r\n        start =0;\r\n    }else{\r\n        start = (page-1)*7;\r\n    }\r\n    setPeople(data.splice(start,7));\r\n    \r\n  },[page]);\r\n\r\n    function previousPage() {\r\n        if (page > 1) {\r\n            setPage(page - 1)\r\n            \r\n        }\r\n    }\r\n\r\n    function nextPage(){\r\n    \r\n            setPage(page + 1)\r\n        \r\n    }\r\n\r\n    return (<>\r\n        <Button variant=\"primary\" onClick={ event =>  window.location.href='/people'}>Arranged data</Button>{' '}\r\n        <Button variant=\"secondary\" onClick={ event =>  window.location.href='/peopleJson'}>JSON data</Button>{' '}\r\n        <div>  <br/></div>\r\n        <Card>\r\n        <Card.Body>\r\n          <Card.Title>People List(Raw JSON)</Card.Title>\r\n          <Card.Text>\r\n           It will show vaccinated and unvaccinated people on the list {\"(RAW JSON)\"}\r\n          </Card.Text>\r\n        </Card.Body>\r\n       \r\n      </Card>\r\n      <div>  <br/></div>\r\n{JSON.stringify(people)}\r\n \r\n<div>  <br/></div>\r\n        <Pagination>\r\n <Pagination.Prev onClick={previousPage}/>\r\n <Pagination.Item onClick={()=>{setPage(page === 1 ? 1 : page === 2 ? 1 : page -2)}}>{page === 1 ? 1 : page === 2 ? 1 : page -2 }</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 2 : page === 2 ? 2: page -1)}}>{page ===1 ? 2 : page === 2 ? 2: page -1}</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 3 : page === 2 ? 3: page)}}>{page ===1 ? 3 : page === 2 ? 3: page}</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 4 : page === 2 ? 4: page +1)}}>{page ===1 ? 4 : page === 2 ? 4: page +1}</Pagination.Item>\r\n <Pagination.Item onClick={()=>{setPage(page ===1 ? 5 : page === 2 ? 5: page +2)}}>{page ===1 ? 5 : page === 2 ? 5: page +2}</Pagination.Item>\r\n <Pagination.Next onClick={nextPage}/>\r\n</Pagination>\r\n\r\n\r\n        </>\r\n           \r\n        )\r\n\r\n}\r\n\r\nexport default PeopleJson;","\nimport './App.css';\n\nimport { Button, Col, Container, Form, FormControl, Nav, Navbar, Row } from 'react-bootstrap';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport People from './people';\nimport Person from './person';\nimport Main from './main';\nimport PeopleJson from './peopleJson';\n\nfunction App() {\n  return ( <>\n    <Navbar bg=\"light\" expand=\"lg\">\n    <LinkContainer to=\"/\">\n    <Navbar.Brand href=\"#home\">Digital health Passport</Navbar.Brand>\n    </LinkContainer>\n \n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n    <LinkContainer to=\"/main\">\n    <Nav.Link>Main</Nav.Link>\n    </LinkContainer>\n      <LinkContainer to=\"/People\">\n    <Nav.Link>vaccinated people list</Nav.Link>\n    </LinkContainer>\n\n    </Nav>\n    \n  </Navbar.Collapse>\n</Navbar>\n\n\n<br />\n    <Container>\n     <Row>\n      <Col>\n        <Switch>\n         <Route exact path=\"/\">\n            <Redirect to=\"/main\" />\n         </Route>\n         <Route exact path=\"/main\" component={Main} />\n         <Route exact path=\"/People\" component={People} />\n         <Route exact path=\"/peopleJson\" component={PeopleJson} />\n         <Route path=\"/Person/:id\" render={(props) => <Person id={props.match.params.id} />} />\n         <Route component={Main} />\n\n        </Switch>\n      </Col>\n      </Row>\n    </Container>\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*********************************************************************************\n* WEB422 – Assignment 3\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy.\n* No part of this assignment has been copied manually or electronically from any other source\n* (including web sites) or distributed to other students.\n*\n* Name: __Geunhyeok Heo________ Student ID: ___136873197_____ Date: ____2021-02-24__\n*\n*\n********************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <BrowserRouter> <App /></BrowserRouter>\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}